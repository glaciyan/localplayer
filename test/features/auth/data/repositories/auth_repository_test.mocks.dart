// Mocks generated by Mockito 5.4.6 from annotations
// in localplayer/test/features/auth/data/repositories/auth_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:localplayer/core/network/api_client.dart' as _i2;
import 'package:localplayer/core/services/spotify/data/services/config_service.dart'
    as _i5;
import 'package:localplayer/features/auth/data/datasources/auth_remote_data_source.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiClient_0 extends _i1.SmartFake implements _i2.ApiClient {
  _FakeApiClient_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRemoteDataSource extends _i1.Mock
    implements _i3.AuthRemoteDataSource {
  MockAuthRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApiClient get apiClient =>
      (super.noSuchMethod(
            Invocation.getter(#apiClient),
            returnValue: _FakeApiClient_0(this, Invocation.getter(#apiClient)),
          )
          as _i2.ApiClient);

  @override
  _i4.Future<Map<String, dynamic>> signIn(
    String? name,
    String? password,
    String? notSecret,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signIn, [name, password, notSecret]),
            returnValue: _i4.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<dynamic> signUp(
    String? name,
    String? password,
    String? notSecret,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signUp, [name, password, notSecret]),
            returnValue: _i4.Future<dynamic>.value(),
          )
          as _i4.Future<dynamic>);

  @override
  _i4.Future<dynamic> findMe(String? bearer) =>
      (super.noSuchMethod(
            Invocation.method(#findMe, [bearer]),
            returnValue: _i4.Future<dynamic>.value(),
          )
          as _i4.Future<dynamic>);
}

/// A class which mocks [ConfigService].
///
/// See the documentation for Mockito's code generation for more information.
class MockConfigService extends _i1.Mock implements _i5.ConfigService {
  MockConfigService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get clientId =>
      (super.noSuchMethod(
            Invocation.getter(#clientId),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.getter(#clientId),
            ),
          )
          as String);

  @override
  String get clientSecret =>
      (super.noSuchMethod(
            Invocation.getter(#clientSecret),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.getter(#clientSecret),
            ),
          )
          as String);

  @override
  String get apiBaseUrl =>
      (super.noSuchMethod(
            Invocation.getter(#apiBaseUrl),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.getter(#apiBaseUrl),
            ),
          )
          as String);

  @override
  String get notSecret =>
      (super.noSuchMethod(
            Invocation.getter(#notSecret),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.getter(#notSecret),
            ),
          )
          as String);

  @override
  set clientId(String? _clientId) => super.noSuchMethod(
    Invocation.setter(#clientId, _clientId),
    returnValueForMissingStub: null,
  );

  @override
  set clientSecret(String? _clientSecret) => super.noSuchMethod(
    Invocation.setter(#clientSecret, _clientSecret),
    returnValueForMissingStub: null,
  );

  @override
  set apiBaseUrl(String? _apiBaseUrl) => super.noSuchMethod(
    Invocation.setter(#apiBaseUrl, _apiBaseUrl),
    returnValueForMissingStub: null,
  );

  @override
  set notSecret(String? _notSecret) => super.noSuchMethod(
    Invocation.setter(#notSecret, _notSecret),
    returnValueForMissingStub: null,
  );

  @override
  _i4.Future<void> load() =>
      (super.noSuchMethod(
            Invocation.method(#load, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
